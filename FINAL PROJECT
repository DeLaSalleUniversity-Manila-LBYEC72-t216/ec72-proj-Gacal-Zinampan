#include <iostream>
#include <string>

using namespace std;


typedef struct {
int ord;
int qty;
int prc;
} data;


int main()
{
int idnum;
string name,addord;
int checkout;
float *chapoint;
data entry[22];
int i, i2, amt, total, opt, discount, pay, deleteopt, item, item1[22], total1;
float total2, total3, total4, total5, change;

login:
cin.clear();
fflush(stdin);
cout << "Enter Name: ";
getline(cin, name);
cout << "\nEnter ID Number: ";
cin >> idnum;


if (name=="John Gacal" && idnum== 11514272 || name =="john gacal" && idnum== 11514272 || name=="David Zinampan" && idnum==11527900 || name=="david zinampan" && idnum==11527900)
goto welcome;

else 
{
cout << "\nInvalid Name and ID Number. Try again!\n\n";
goto login;
}

welcome:
system("cls");
cout << "\t\t\t\t  WELCOME\n\n";
cout << "\t\t\t\tLBYEC72 EB1\n\n";
cout << "\t\t     David Zinampan and John Gacal\n\n\n\n";
system("pause");
goto menu;

menu:
system("cls");
cout << "\t\t\t\tBarn Manila";
cout << "\n\n\t\t\t\t   MENU";

cout << "\n\nAppetizers:\t\t\t\tSandwiches:";
cout << "\n\n101   Hungarian Platter     \tP220\t204   Chicken Pesto        \tP140";
cout << "\n\n102   Potato Hash           \tP160\t205   Roast Beef           \tP160";
cout << "\n\n103   Fried Sisig Dumplings \tP180\t206   Salmon Burger        \tP150";

cout << "\n\nAll Day Breakfast:\t\t\tPasta:";
cout << "\n\n307   Beef Tapa             \tP170\t411   Pesto w/ Chicken     \tP150";
cout << "\n\n308   Corned Beef           \tP170\t412   Bolognese            \tP150";
cout << "\n\n309   Longganisa            \tP160\t413   Carbonara            \tP150";
cout << "\n\n310   Smoked Milkfish       \tP160\t414   Baked Macaroni       \tP150";

cout << "\n\n\t\t\t\t   Entrees:";
cout << "\n\n515   Roast Chicken         \tP190\t519   Buttermilk Porkchops \tP180";
cout << "\n\n516   Shitake Chicken       \tP180\t520   Beefy Mushroom       \tP175";
cout << "\n\n517   Signature Steak       \tP190\t521   Pork Steak           \tP175";
cout << "\n\n518   Coq Au Vin            \tP190\t522   Korean Beef Stew     \tP180";
cout << "\n\n";
system("pause");

options:
system("cls");
cout << "\t\t\t\tBarn Manila";
cout << "\n\n\t\t\t\t  OPTIONS";
cout << "\n\n1. Back to Menu \n2. Take Order \n3. Exit";

cout << "\n\n\nChoose an option: ";
cin >> opt;

switch(opt)
{
case 1:
goto menu;
break;

case 2:
goto order;
break;

case 3:
exit(0);
break;

default:
{
printf("\nInvalid option. Try again!");
cout << "\n\n";
system("pause");
goto options;
}
}

order:
system("cls");
cout << "\t\t\t\tBarn Manila";
cout << "\n\n\t\t\t\tTake Order";

total=0;


for(i=1;i<23;i++)  
{
cout << "\n\n\n\t    ITEM NUMBER " << i;

cout << "\n\nEnter order number: ";
cin >> entry[i].ord;

cout << "\nEnter quantity: ";
cin >> entry[i].qty;

if(entry[i].ord==101)
{
entry[i].prc=220;
}

else if(entry[i].ord==102 || entry[i].ord==309 || entry[i].ord==310 || entry[i].ord==205) 
{
entry[i].prc=160;
}

else if(entry[i].ord==103 || entry[i].ord==516 || entry[i].ord==522) 
{
entry[i].prc=180;
}

else if(entry[i].ord==204) 
{
entry[i].prc=140;
}

else if(entry[i].ord==206 || entry[i].ord==411 || entry[i].ord==412 || entry[i].ord==413 || entry[i].ord==414) 
{
entry[i].prc=150;
}

else if(entry[i].ord==307 || entry[i].ord==308) 
{
entry[i].prc=170;
}

else if(entry[i].ord==515 || entry[i].ord==518 || entry[i].ord==517) 
{
entry[i].prc=190;
}

else if(entry[i].ord==519) 
{
entry[i].prc=180;
}

else if(entry[i].ord==520 || entry[i].ord==521) 
{
entry[i].prc=175;
}

else 
{
printf("\n\nInvalid order number. Try again!");
cout << "\n\n";
system("pause");
goto order;
}

amt=entry[i].prc*entry[i].qty;
total=amt+total;
cout << "\nTOTAL AMOUNT: P "<< total;

additional:
cout << "\n\nAdditional order? <Yes or No> ";
cin >> addord;
i2=i;  

if (addord=="Yes"|| addord=="yes"){}
else if (addord=="No" || addord=="no")
goto checkout;

else
{
cout << "\nInvalid. Try again!";
cout << "\n\n";
system("pause");
goto additional;
}
}    

checkout:
cout << "\n\nEnter 1-receipt, 2-options, 3-exit: ";
cin >> checkout;

if (checkout==1)
goto receipt;

else if (checkout==2)
goto options;

else if (checkout== 3)
exit(0);

else
{
cout << "\nInvalid. Try again!";
cout << "\n\n";
system("pause");
goto checkout;
}

receipt:
system("cls");
cout << "\t\t\t\tBarn Manila";
cout << "\n\n\t\t\t\t  Receipt";
cout << "\n\nItem #\t\tOrder\t\tQuantity\t\tPrice\t\tTOTAL\n";

for(i=1;i<=i2;i++)   
{
cout << "\n   "<< i <<"\t\t "<< entry[i].ord <<"\t\t   "<< entry[i].qty <<"\t\t\tP "<< entry[i].prc <<"\t\tP " << entry[i].qty*entry[i].prc<<'\n';
}

cout << "\n\nTOTAL\t\t\t\t\t\t\t\t\tP "<< total;
cout << "\n\n";
system("pause");

deleteorder:
cout << "\n\nDo you want to delete an order? <1-yes or 2-no> ";
cin >> deleteopt;

switch(deleteopt)
{
case 1:
{
cout << "\nInput item number: ";
cin >> item;

if(item>i2) 
{
cout << "\n\t\t\tINVALID ITEM NUMBER!";	
cout << "\n\n";
system("pause");
goto deleteorder;
}

else
{
total1=total-(entry[item].prc*entry[item].qty);
for(i=item;i<=i2;i++) 
{
entry[i].ord=entry[i+1].ord;
entry[i].prc=entry[i+1].prc;	
entry[i].qty=entry[i+1].qty;
}
cout << "\n\n\t\t\tITEM DELETED!\n";

i2 = i2-1; 

for(i=1;i<=i2;i++)   
{
cout << "\n   "<< i <<"\t\t "<< entry[i].ord <<"\t\t   "<< entry[i].qty <<"\t\t\tP "<< entry[i].prc <<"\t\tP " << entry[i].qty*entry[i].prc<<'\n';
}

cout << "\n\nTOTAL\t\t\t\t\t\t\t\t\tP " << total1;
cout << "\n\n";
system("pause");

cout << "\n\n\nDiscount? <1- NONE, 2- Senior 20%, 3- Others 30%> "; 
cin >> discount;

switch(discount)
{
case 1:
{
cout << "\n\nEnter CASH payment: ";
cin >> pay;

if(pay>=total1)
{chapoint = &change;
*chapoint=pay-total1;

cout << "\n\nYour CHANGE is P "<< change;
cout << "\n\n\t\t\tYOUR ORDER HAS BEEN PROCESSED. THANK YOU!";
cout << "\n\n";
system("pause");
exit(0);		
}

else
{
cout << "\nYou don't have enough money to pay! Goodbye.";
cout << "\n\n";
system("pause");
exit(0);
}
}
break;

case 2:
{
cout << "\n\nEnter CASH payment: ";
cin >> pay;

total2=total1*0.8;

if(pay>=total2)
{	
chapoint = &change;
*chapoint=pay-total2;

cout << "\n\nYour CHANGE is P " << change;
cout << "\n\n\t\t\tYOUR ORDER HAS BEEN PROCESSED. THANK YOU!";
cout << "\n\n";
system("pause");
exit(0);	
}

else
{
cout << "You don't have enough money to pay! Goodbye.";
cout << "\n\n";
system("pause");
exit(0);	
}
}
break;

case 3:
{
cout << "\n\nEnter CASH payment: ";
cin >> pay;

total3=total1*0.7;

if(pay>=total3)
{
chapoint = &change;
*chapoint=pay-total3;

cout << "\n\nYour CHANGE is P " << change;
cout << "\n\n\t\t\tYOUR ORDER HAS BEEN PROCESSED. THANK YOU!";
cout << "\n\n";
system("pause");
exit(0);
}

else
{
cout << "You don't have enough money to pay! Goodbye.";
cout << "\n\n";
system("pause");
exit(0);
}
}
break; 

default:
{
cout << "\n\nInvalid. Try again!";
cout << "\n\n";
system("pause");
goto receipt;
}

}
}
}
break;
case 2:
goto disc;
break;

default:
{
cout << "\nInvalid. Try again!";
cout << "\n\n";
system("pause");
goto deleteorder;
}
}

disc:
cout << "\n\n\nDiscount? <1- NONE, 2- Senior 20%, 3- Others 30%> ";
cin >> discount;

switch(discount)
{
case 1:
{
cout << "\n\nEnter CASH payment: ";
cin >> pay;

if(pay>=total)
{
chapoint = &change;
*chapoint=pay-total;

cout << "\n\nYour CHANGE is P " << change;
cout << "\n\n\t\t\tYOUR ORDER HAS BEEN PROCESSED. THANK YOU!";
cout << "\n\n";
system("pause");
exit(0);
}

else
{
cout << "You don't have enough money to pay! Goodbye.";
cout << "\n\n";
system("pause");
exit(0);
}
}
break;

case 2:
{
cout << "\n\nEnter CASH payment: ";
cin >> pay;

total4=total*0.8;

if(pay>=total4)
{
chapoint = &change;
*chapoint=pay-total4;

cout << "\n\nYour CHANGE is P " << change;
cout << "\n\n\t\t\tYOUR ORDER HAS BEEN PROCESSED. THANK YOU!";
cout << "\n\n";
system("pause");
exit(0);
}

else
{
cout << "You don't have enough money to pay! Goodbye.";
cout << "\n\n";
system("pause");
exit(0);
}
}
break;

case 3:
{
cout << "\n\nEnter CASH payment: ";
cin >> pay;

total5=total*0.7;

if(pay>=total5)
{
chapoint = &change;
*chapoint=pay-total5;

cout << "\n\nYour CHANGE is P " << change;
cout << "\n\n\t\t\tYOUR ORDER HAS BEEN PROCESSED. THANK YOU!";
cout << "\n\n";
system("pause");
exit(0);
}

else
{
cout << "You don't have enough money to pay! Goodbye.";
cout << "\n\n";
system("pause");
exit(0);
}
}
break; 

default:
{
cout << "\n\nInvalid. Try again!";
cout << "\n\n";
system("pause");
goto receipt;
}
}


return 0;
}
